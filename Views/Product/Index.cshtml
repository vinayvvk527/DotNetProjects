@model IEnumerable<EKart.Models.Product>

@{
    ViewData["Title"] = "Prodcts";
}

<h1>Products</h1>

@{
    string user;
    if(Context.Session.GetString("UserName")!=null)
    {
        user = Context.Session.GetString("UserName");
    }
    else
    {
        user = string.Empty;
    }
}

@if (user == "ADMINEKART")
{
    <p>
        <a asp-action="AddProducts">Add New Product</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
          @*  <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QuantityAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
          @*  <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>*@
            <td>
                @if(user=="ADMINEKART")
                {
                    <a asp-action="EditProduct" asp-route-id="@item.ProductId">Edit</a> 
                     <a asp-action="DeleteProduct" asp-route-id="@item.ProductId">Delete</a> 
                    
                }

                <a asp-action="ViewByName" asp-route-id="@item.ProductId">Details</a> 

            </td>
        </tr>
}
    </tbody>
</table>
